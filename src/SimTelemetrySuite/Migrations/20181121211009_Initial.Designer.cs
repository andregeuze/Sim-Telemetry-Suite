// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimTelemetrySuite.Data;

namespace SimTelemetrySuite.Migrations
{
    [DbContext(typeof(TelemetryContext))]
    [Migration("20181121211009_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimTelemetrySuite.Data.Lap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number");

                    b.Property<float>("Sector1");

                    b.Property<float>("Sector2");

                    b.Property<float>("Sector3");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<int?>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("Number");

                    b.HasIndex("VehicleId");

                    b.ToTable("Lap");
                });

            modelBuilder.Entity("SimTelemetrySuite.Data.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CurrentTime");

                    b.Property<float>("Duration");

                    b.Property<string>("Mode");

                    b.Property<string>("Name");

                    b.Property<string>("Phase")
                        .IsRequired();

                    b.Property<float>("TrackDistance");

                    b.Property<string>("TrackName");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("SimTelemetrySuite.Data.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DriverName");

                    b.Property<string>("InternalPosition");

                    b.Property<string>("InternalPreviousPosition");

                    b.Property<int>("IsPlayer");

                    b.Property<DateTime>("LastRefresh");

                    b.Property<string>("Name");

                    b.Property<int>("Place");

                    b.Property<string>("PreviousSector")
                        .IsRequired();

                    b.Property<string>("PreviousStatus")
                        .IsRequired();

                    b.Property<float>("PreviousVelocity");

                    b.Property<string>("Sector")
                        .IsRequired();

                    b.Property<int?>("SessionId");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<float>("TopVelocity");

                    b.Property<int>("TotalLaps");

                    b.Property<float>("Velocity");

                    b.HasKey("Id");

                    b.HasIndex("DriverName");

                    b.HasIndex("SessionId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("SimTelemetrySuite.Data.Waypoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Distance");

                    b.Property<float>("InternalX");

                    b.Property<float>("InternalY");

                    b.Property<float>("InternalZ");

                    b.Property<int?>("SessionId");

                    b.HasKey("Id");

                    b.HasIndex("Distance");

                    b.HasIndex("SessionId");

                    b.ToTable("Waypoint");
                });

            modelBuilder.Entity("SimTelemetrySuite.Data.Lap", b =>
                {
                    b.HasOne("SimTelemetrySuite.Data.Vehicle")
                        .WithMany("Laps")
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("SimTelemetrySuite.Data.Vehicle", b =>
                {
                    b.HasOne("SimTelemetrySuite.Data.Session")
                        .WithMany("Vehicles")
                        .HasForeignKey("SessionId");
                });

            modelBuilder.Entity("SimTelemetrySuite.Data.Waypoint", b =>
                {
                    b.HasOne("SimTelemetrySuite.Data.Session")
                        .WithMany("Waypoints")
                        .HasForeignKey("SessionId");
                });
#pragma warning restore 612, 618
        }
    }
}
